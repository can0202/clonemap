import React, {useState} from 'react';
import {Avatar, Button, Col, Row, Skeleton} from 'antd';
import PropTypes from 'prop-types';
import Link from 'next/link';
import LogoLand from 'assets/img/land-logo-red.png';
import {UserOutlined} from '@ant-design/icons';
import NoImage from 'assets/img/no-image.png';
import AuthorImage from 'assets/img/author.png';
import IntlMessages from '@crema/utility/IntlMessages';
import {useIntl} from 'react-intl';
import {useSelector} from 'react-redux';
import ModalLogin from 'components/ModalLogin';

const PostAuthorCardProject = (props) => {
  const {messages} = useIntl();
  const {dataPost, loading} = props;
  const {isAuthenticated} = useSelector(({auth}) => auth);
  const [isToggle, setIsToggle] = useState(true);
  const [openModal, setOpenModal] = useState(false);

  const onClickToggle = () => {
    if (!isAuthenticated) {
      setOpenModal(true);
      return;
    }
    setIsToggle(!isToggle);
  };

  const noteSecurity = [
    messages['common.needAdviceNoti1'],
    messages['common.needAdviceNoti2'],
  ];

  return (
    <div className='sidebar-contact'>
      <Row gutter={[0, 16]}>
        <Col xs={24} className='text-center'>
          <Avatar
            src={AuthorImage.src}
            size={60}
            alt={messages['common.needAdvice']}
          />
        </Col>
        <Col xs={24} className='text-center'>
          <h2>
            <IntlMessages id='common.needAdvice' />
          </h2>
        </Col>
        <Col xs={24} className='text-center author-subtitle'>
          <p>
            <IntlMessages id='common.needAdviceSub' />
          </p>
        </Col>
        <Col xs={24}>
          <Row gutter={[0, 16]} className='author-note'>
            {noteSecurity?.map((item, index) => {
              return (
                <Col key={index} xs={24}>
                  <svg
                    xmlns='http://www.w3.org/2000/svg'
                    width='20'
                    height='20'
                    viewBox='0 0 20 20'
                    fill='none'
                  >
                    <path
                      d='M2.5 8.68087C2.5 6.01622 2.5 4.68389 2.8146 4.23567C3.12919 3.78744 4.38194 3.35862 6.88743 2.50099L7.36477 2.33759C8.67082 1.89052 9.32384 1.66699 10 1.66699C10.6762 1.66699 11.3292 1.89052 12.6352 2.33759L13.1126 2.50099C15.6181 3.35862 16.8708 3.78744 17.1854 4.23567C17.5 4.68389 17.5 6.01622 17.5 8.68087C17.5 9.08337 17.5 9.51984 17.5 9.99312C17.5 14.6915 13.9675 16.9716 11.7512 17.9397C11.15 18.2023 10.8494 18.3337 10 18.3337C9.15062 18.3337 8.85001 18.2023 8.2488 17.9397C6.03247 16.9716 2.5 14.6915 2.5 9.99312C2.5 9.51984 2.5 9.08337 2.5 8.68087Z'
                      stroke='#D1132A'
                      strokeWidth='1.5'
                    />
                    <path
                      d='M7.91797 10.333L9.10844 11.6663L12.0846 8.33301'
                      stroke='#D1132A'
                      strokeWidth='1.5'
                      strokeLinecap='round'
                      strokeLinejoin='round'
                    />
                  </svg>
                  <span>{item}</span>
                </Col>
              );
            })}
          </Row>
        </Col>
        <Col xs={24} className='author-button'>
          <Row gutter={[0, 12]}>
            {dataPost?.postAuthor?.phone && (
              <Col xs={24}>
                <Button type='primary' onClick={onClickToggle} block>
                  <svg
                    xmlns='http://www.w3.org/2000/svg'
                    width='21'
                    height='20'
                    viewBox='0 0 21 20'
                    fill='none'
                  >
                    <path
                      d='M11.75 1.66699C11.75 1.66699 13.6945 1.84377 16.1694 4.31864C18.6443 6.79352 18.8211 8.73806 18.8211 8.73806'
                      stroke='#FEFEFE'
                      strokeWidth='1.5'
                      strokeLinecap='round'
                    />
                    <path
                      d='M12.3398 4.61328C12.3398 4.61328 13.1648 4.84898 14.4022 6.08642C15.6397 7.32386 15.8754 8.14882 15.8754 8.14882'
                      stroke='#FEFEFE'
                      strokeWidth='1.5'
                      strokeLinecap='round'
                    />
                    <path
                      d='M13.0839 12.5227L12.5401 12.0062H12.5401L13.0839 12.5227ZM13.4635 12.1231L14.0073 12.6396L13.4635 12.1231ZM15.4774 11.8436L15.1032 12.4936H15.1032L15.4774 11.8436ZM17.0694 12.76L16.6953 13.41L17.0694 12.76ZM17.5181 15.632L18.0619 16.1485L17.5181 15.632ZM16.3343 16.8783L15.7905 16.3618L16.3343 16.8783ZM15.2302 17.4692L15.3039 18.2156L15.2302 17.4692ZM7.0128 13.7293L7.55659 13.2128L7.0128 13.7293ZM3.00241 5.80495L2.25348 5.84514L2.25348 5.84514L3.00241 5.80495ZM8.39793 7.08593L8.94173 7.60244L8.39793 7.08593ZM8.52853 4.74425L9.14093 4.31127V4.31127L8.52853 4.74425ZM7.47771 3.25801L6.86532 3.691L6.86532 3.691L7.47771 3.25801ZM4.88454 3.0072L5.42834 3.52372L5.42834 3.52372L4.88454 3.0072ZM3.57654 4.38428L3.03275 3.86776L3.03275 3.86776L3.57654 4.38428ZM9.71927 10.8799L10.2631 10.3634L9.71927 10.8799ZM13.6277 13.0392L14.0073 12.6396L12.9197 11.6066L12.5401 12.0062L13.6277 13.0392ZM15.1032 12.4936L16.6953 13.41L17.4436 12.11L15.8515 11.1936L15.1032 12.4936ZM16.9743 15.1155L15.7905 16.3618L16.8781 17.3949L18.0619 16.1485L16.9743 15.1155ZM15.1566 16.7229C13.9931 16.8377 10.913 16.7464 7.55659 13.2128L6.46901 14.2458C10.1906 18.164 13.7516 18.3688 15.3039 18.2156L15.1566 16.7229ZM7.55659 13.2128C4.34791 9.83466 3.81734 6.99465 3.75133 5.76475L2.25348 5.84514C2.33772 7.41445 3.00328 10.5971 6.46901 14.2458L7.55659 13.2128ZM8.70271 7.85408L8.94173 7.60244L7.85414 6.56941L7.61513 6.82105L8.70271 7.85408ZM9.14093 4.31127L8.09011 2.82503L6.86532 3.691L7.91614 5.17723L9.14093 4.31127ZM4.34075 2.49069L3.03275 3.86776L4.12033 4.9008L5.42834 3.52372L4.34075 2.49069ZM8.15892 7.33756C7.61513 6.82105 7.61443 6.82178 7.61374 6.82251C7.6135 6.82276 7.6128 6.8235 7.61233 6.824C7.61139 6.82501 7.61043 6.82604 7.60945 6.82708C7.60751 6.82918 7.6055 6.83135 7.60345 6.83361C7.59934 6.83813 7.59501 6.84299 7.5905 6.84818C7.58147 6.85856 7.57167 6.8703 7.56128 6.88343C7.5405 6.90969 7.51733 6.94153 7.49323 6.9792C7.44488 7.05475 7.39328 7.15297 7.34984 7.27504C7.26135 7.52369 7.21527 7.84734 7.27358 8.24526C7.38784 9.02507 7.89437 10.0477 9.17547 11.3964L10.2631 10.3634C9.08166 9.1196 8.80802 8.37103 8.75773 8.0278C8.73376 7.8642 8.75931 7.78836 8.76303 7.77792C8.76569 7.77043 8.76533 7.77419 8.7567 7.78768C8.75246 7.79431 8.74627 7.80322 8.7375 7.8143C8.73311 7.81984 8.72808 7.82592 8.72231 7.83255C8.71943 7.83587 8.71636 7.83932 8.7131 7.84291C8.71147 7.8447 8.70979 7.84653 8.70806 7.84839C8.70719 7.84932 8.70632 7.85026 8.70542 7.85121C8.70498 7.85168 8.7043 7.8524 8.70408 7.85264C8.7034 7.85336 8.70271 7.85408 8.15892 7.33756ZM9.17547 11.3964C10.4521 12.7405 11.434 13.2886 12.2048 13.4138C12.6018 13.4783 12.9283 13.4274 13.1797 13.3283C13.3023 13.2799 13.4 13.2228 13.4742 13.1702C13.5113 13.1439 13.5424 13.1188 13.5678 13.0965C13.5805 13.0854 13.5918 13.0749 13.6018 13.0653C13.6068 13.0605 13.6114 13.0559 13.6157 13.0515C13.6179 13.0493 13.62 13.0472 13.622 13.0452C13.623 13.0441 13.624 13.0431 13.6249 13.0421C13.6254 13.0416 13.6261 13.0409 13.6263 13.0406C13.627 13.0399 13.6277 13.0392 13.0839 12.5227C12.5401 12.0062 12.5408 12.0054 12.5415 12.0047C12.5417 12.0045 12.5424 12.0038 12.5429 12.0033C12.5438 12.0024 12.5447 12.0014 12.5455 12.0005C12.5473 11.9987 12.5491 11.9969 12.5508 11.9952C12.5542 11.9917 12.5575 11.9884 12.5607 11.9854C12.5671 11.9792 12.5731 11.9737 12.5786 11.9689C12.5896 11.9592 12.5989 11.952 12.6065 11.9467C12.6217 11.9358 12.6297 11.9327 12.6293 11.9329C12.6293 11.9329 12.6173 11.9377 12.5904 11.9406C12.5635 11.9434 12.5162 11.9447 12.4453 11.9332C12.1494 11.8851 11.449 11.6119 10.2631 10.3634L9.17547 11.3964ZM8.09011 2.82503C7.20368 1.5713 5.42118 1.35319 4.34075 2.49069L5.42834 3.52372C5.80542 3.12672 6.48013 3.1462 6.86532 3.691L8.09011 2.82503ZM3.75133 5.76475C3.73577 5.47486 3.86121 5.1736 4.12033 4.9008L3.03275 3.86776C2.56917 4.35583 2.21032 5.04089 2.25348 5.84514L3.75133 5.76475ZM15.7905 16.3618C15.5716 16.5922 15.3544 16.7033 15.1566 16.7229L15.3039 18.2156C15.9651 18.1504 16.4949 17.7982 16.8781 17.3949L15.7905 16.3618ZM8.94173 7.60244C9.79154 6.70775 9.84892 5.31262 9.14093 4.31127L7.91614 5.17723C8.23555 5.62899 8.18191 6.22433 7.85414 6.56941L8.94173 7.60244ZM16.6953 13.41C17.3117 13.7648 17.4272 14.6386 16.9743 15.1155L18.0619 16.1485C19.207 14.9429 18.872 12.9322 17.4436 12.11L16.6953 13.41ZM14.0073 12.6396C14.2878 12.3443 14.7248 12.2758 15.1032 12.4936L15.8515 11.1936C14.8873 10.6386 13.6885 10.7971 12.9197 11.6066L14.0073 12.6396Z'
                      fill='#FEFEFE'
                    />
                  </svg>
                  {isToggle
                    ? dataPost?.postAuthor?.phone.substr(0, 5) + '*****'
                    : dataPost?.postAuthor?.phone}
                </Button>
              </Col>
            )}

            <Col xs={24}>
              <Button
                type='default'
                href={`mailto:${dataPost?.postAuthor?.email}`}
              >
                <svg
                  xmlns='http://www.w3.org/2000/svg'
                  width='20'
                  height='20'
                  viewBox='0 0 20 20'
                  fill='none'
                >
                  <path
                    d='M1.66797 9.99967C1.66797 6.85698 1.66797 5.28563 2.64428 4.30932C3.62059 3.33301 5.19194 3.33301 8.33464 3.33301H11.668C14.8107 3.33301 16.382 3.33301 17.3583 4.30932C18.3346 5.28563 18.3346 6.85698 18.3346 9.99967C18.3346 13.1424 18.3346 14.7137 17.3583 15.69C16.382 16.6663 14.8107 16.6663 11.668 16.6663H8.33464C5.19194 16.6663 3.62059 16.6663 2.64428 15.69C1.66797 14.7137 1.66797 13.1424 1.66797 9.99967Z'
                    stroke='#D1132A'
                    strokeWidth='1.5'
                  />
                  <path
                    d='M5 6.66699L6.79908 8.16623C8.32961 9.44167 9.09488 10.0794 10 10.0794C10.9051 10.0794 11.6704 9.44167 13.2009 8.16622L15 6.66699'
                    stroke='#D1132A'
                    strokeWidth='1.5'
                    strokeLinecap='round'
                  />
                </svg>
                <IntlMessages id='common.sendEmail' />
              </Button>
            </Col>
          </Row>
        </Col>
      </Row>

      {/* Modal Login */}
      <ModalLogin
        openModalLogin={openModal}
        setOpenModalLogin={setOpenModal}
        description={<IntlMessages id='common.notiPhoneLogin' />}
      />
    </div>
  );
};

export default PostAuthorCardProject;
PostAuthorCardProject.propTypes = {
  dataPost: PropTypes.any,
  loading: PropTypes.any,
};
